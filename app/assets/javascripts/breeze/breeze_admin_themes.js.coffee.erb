open_theme_folder = (theme_link, options) ->
  options = options or {}
  $this = $(theme_link)
  $this.addClass "loading"

  $.get theme_link.href, (data) ->

    $this.removeClass "loading"
    $page = $this.closest(".pages").find(".page:eq(1)")
    $page.find(".header h2").text $this.find("strong").text()
    $page.find(".inner").html data

    $this.closest(".sliding").each ->
      advance_slider $(this), 1  if parseInt($(".pages", this).css("left")) is 0

    $("#left #theme_files").jstree
      core : {  },
      plugins : [ "crrm", "ui", "html_data", "contextmenu" ],
      ui:
        select_limit: 1
        dots: false
      contextmenu:
        items:
          ccp: false
          create: false
          create:
            action: (node) ->
              $("#left #theme_files").jstree("create",node)
          rename:
            action: (node) ->
              $("#left #theme_files").jstree("rename",node)
          remove:
            action: (node) ->
              message = $(this).attr("data-confirm") or "Are you sure you want to delete this?"
              $("<p>" + message + "</p>").dialog
                modal: true
                resizable: false
                buttons:
                  Delete: ->
                    $(this).dialog "close"
                    $.each node, ->
                      $("#left #theme_files").jstree("remove", node)
                  Cancel: ->
                    $(this).dialog "close"
                title: "Confirm delete"
      types:
        default:
          deletable: true
          renameable: true
          create: true
        special:
          rename: false
          deletable: false
          start_drag: false
          move_node: false
        file:
          create: false
          valid_children: []
        folder:
          valid_children: ["file", "folder"]
      rules:
        multiple: false
        drag_copy: false
    .bind 'rename.jstree', (node, ref) ->
      url = $(">a", ref.rslt.obj[0]).attr("href")
      name = ref.rslt.new_name
      rename_file url, name
    .bind 'remove.jstree', (node, ref) ->
      url = $(">a", ref.rslt.obj[0]).attr("href")
      remove_file url 
    .bind 'create.jstree', (node, ref) ->
      parent = ref.rslt.parent[0]
      node = ref.rslt.obj[0]
      name = ref.rslt.name
      create_file parent, node, name

    if options.open
      $.each options.open, (i, folder) ->
        node = $("#left #theme_files a[href=" + folder + "]")
        $.tree.reference("#left #theme_files").open_branch node, true

    $("#left #theme_files a[href=" + options.selected + "]").click()  if options.selected

$("#left #theme_files a").live "click", (e) ->
  a = $(this)
  url = $(a).attr("href")
  unless url is ""
    name = url.substring(1)
    title = name.replace(/^([^\/]*\/)*/, "")
    name = name.replace(/[\/\. ]/g, "-")
    open_tab name, url.replace(RegExp(" ", "g"), "+"),
      close: true
      title: title
      success: (tab, pane) =>
        $("textarea", pane).each =>
          options =
            height: $(this).height()
            path: '<%= asset_path "codemirror/js/" %>'
            stylesheet: ["<%= asset_path 'codemirror/css/xmlcolors.css' %>", "<%= asset_path 'codemirror/css/jscolors.css' %>", "<%= asset_path 'codemirror/css/csscolors.css' %>"]
          if /\.js$/.test(url)
            options.parserfile = ["tokenizejavascript.js", "parsejavascript.js"]
            options.autoMatchParens = true
          else if /\.css$/.test(url)
            options.parserfile = ["parsecss.js"]
            options.autoMatchParens = true
          else
            options.parserfile = ["parsexml.js", "parsecss.js", "tokenizejavascript.js", "parsejavascript.js", "parsehtmlmixed.js"]
          textarea = $('#tab_' + name).children('.editor').children('textarea')
          editor = CodeMirror.fromTextArea( textarea.get(0), options )

remove_file = (url) ->
  $.ajax
    url: url
    type: "post"
    data: "_method=delete"

rename_file = (url, name) ->
  unless url is ""
    $.ajax
      url: url
      data: "_method=put&" + ((if $(node).hasClass("folder") then "folder" else "file")) + "[name]=" + escape(name)
      type: "post"

create_file = (parent, node, name) ->
  parent_href = $(">a", parent).attr("href")
  if /\.\w+$/.test(name)
    # create a file
    parent_href = parent_href.replace(/^\/admin\/themes\/([^\/]+)\/folders/, "/admin/themes/$1/files")
    path = parent_href + "/" + file_name
    $.ajax
      url: path
      type: "post"
      data: "_method=put"
      success: ->
        $(">a", node).attr("href", path).click().parent().addClass name.replace(/^.*\.([^\.]+)$/, "$1")
  else
    # create a folder
    $(node).addClass "folder"
    folder_name = name
    $.ajax
      url: parent_href
      type: "post"
      data: "folder[name]=" + folder_name
      success: ->
        $(">a", node).attr("href", parent_href + "/" + folder_name).click()

# get_open_theme_folders = ->
#   $.map $("#left .jstree-open>a"), (a, i) ->
#     $(a).attr "href"

$ ->
  $("#left #themes").sortable
    axis: "y"
    items: ">.theme"
    update: (e, ui) ->
      $.ajax
        url: "/admin/themes/reorder"
        type: "post"
        data: "_method=put&" + $(this).sortable("serialize")


  $("#left #themes .theme a").live "click", ->
    open_theme_folder this
    false

  # Toggle enable/disable the selected theme
  $("#left .theme-status a.enable, #left .theme-status a.disable").live "click", ->
    $this = $(this)
    data = {}
    data[$("meta[name=csrf-param]").attr("content")] = $("meta[name=csrf-token]").attr("content")
    data["_method"] = "put"
    $.ajax
      url: @href
      type: "post"
      dataType: "script"
      data: data
    false

  $("form.editor").live "submit", ->
    $(":input", this).each ->
      @blur()

    save_overlay = $("<div class=\"overlay\" style=\"display: none;\"><h3>Savingâ€¦</h3></div>").appendTo($(this)).fadeIn()

  $("form.new.folder").live "ajax:success", ->
    @reset()

  $("form.editor textarea").live "keydown", (e) ->
    if e.metaKey or e.ctrlKey
      switch String.fromCharCode(e.which).toLowerCase()
        when "s"
          $(this).closest("form").submit()
          false

